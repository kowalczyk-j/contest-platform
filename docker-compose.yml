version: '3'

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
      - ./backend:/backend
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    restart: unless-stopped
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  dramatiq_worker:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      RABBIT_HOST: rabbitmq
      POSTGRESQL_HOST: db
      dramatiq_prom_host: dramatiq_worker
      dramatiq_prom_port: 9191
    depends_on:
      rabbitmq:
        condition: service_healthy
      backend:
        condition: service_started
      db:
        condition: service_healthy
    volumes:
      - ./backend:/backend

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
    volumes:
      - ./backend:/backend
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=contest_platform_database
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672/

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/frontend

  db:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: contest_platform_database
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d contest_platform_database"]
      interval: 30s
      timeout: 10s
      retries: 3

